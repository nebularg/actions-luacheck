name: luacheck-runner
description: Runs luacheck.
branding:
  icon: check-square
  color: yellow
inputs:
  files:
    description: >
      A list of files, rockspecs, or directories to be checked.

      Defaults to the workspace path as set by the `path` input.
    required: false
    default: '.'
  path:
    description: >
      The working directory for luacheck.

      The file list should be relative to this path and output
      filenames be displayed relative to this path.

      Defaults to the workspace path.
    required: false
    default: ${{ github.workspace }}
  args:
    description: >
      Additional command-line arguments.

      See https://luacheck.readthedocs.io/en/stable/cli.html
    required: false
  config:
    description: >
      URL to a custom configuration (`.luacheckrc`) file that will be
      used as the default configuration file.
    required: false
    default: ''
  annotate:
    description: >
      Emit annotations for source code at locations parsed from the output.

      Requires showing warning codes (--codes) and that the output of warnings
      not be suppressed through the -qq or -qqq arguments.

      Defaults to true.
    required: false
    default: true
runs:
  using: composite
  steps:
    - name: Install luacheck
      run: |
        if ! hash luacheck &>/dev/null; then
          sudo apt-get update 1>/dev/null || exit 1
          sudo apt-get install -yq luarocks 1>/dev/null || exit 1
          sudo luarocks install luacheck 1.2.0-1 1>/dev/null || exit 1
        fi
        echo "[command]luacheck --version"
        luacheck --version
      shell: bash

    - if: ${{ inputs.config != '' }}
      name: Download luacheck config
      run: |
        mkdir -p ~/.config/luacheck
        curl -fsSL "${{ inputs.config }}" -o ~/.config/luacheck/.luacheckrc || {
          echo "Unable to download \"${{ inputs.config }}\"" >&2
          exit 1
        }
      shell: bash

    - if: ${{ inputs.annotate == 'true' }}
      name: Enable annotations
      run: echo "::add-matcher::luacheck-problem-matcher.json"
      shell: bash

    - run: luacheck ${{ inputs.args }} -- ${{ inputs.files }}
      working-directory: ${{ inputs.path }}
      shell: bash
